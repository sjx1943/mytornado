version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: xianyu_mysql
    environment:
      MYSQL_ROOT_PASSWORD: your_password
      MYSQL_DATABASE: xianyu_db
      MYSQL_USER: xianyu_user
      MYSQL_PASSWORD: your_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - xianyu_network

  mongodb:
    image: mongo:6.0
    container_name: xianyu_mongodb
    ports:
      - "27019:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - xianyu_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: xianyu_redis
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data

  # Tornado应用
  app:
    build: .
    container_name: xianyu_app
    ports:
      - "8000:8000"
    volumes:
      - ./mystatics/images:/app/mystatics/images
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - MYSQL_HOST=mysql
      - MYSQL_USER=xianyu_user
      - MYSQL_PASSWORD=your_password
      - MYSQL_DATABASE=xianyu_db
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=chat_db
      - REDIS_HOST=redis
    depends_on:
      - mysql
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - xianyu_network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: xianyu_nginx
    ports:
      - "8088:80"
      - "8444:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./mystatics:/app/mystatics:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书（可选）
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - xianyu_network

volumes:
  mysql_data:
  mongodb_data:
  redis_data:

networks:
  xianyu_network:
    driver: bridge
